(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{406:function(t,a,n){t.exports=n.p+"assets/img/FactoryMethod.eff2134f.png"},498:function(t,a,n){"use strict";n.r(a);var r=n(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"工厂方法介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法介绍"}},[t._v("#")]),t._v(" 工厂方法介绍")]),t._v(" "),r("ul",[r("li",[t._v("概念：是一种实现了“工厂”概念的面向对象设计模式。就像其他创建型模式一样，它也是"),r("font",{attrs:{color:"red"}},[t._v("处理在不指定对象具体类型的情况下创建对象的问题")]),t._v("。")],1)]),t._v(" "),r("br"),t._v(" "),r("h2",{attrs:{id:"工厂方法作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法作用"}},[t._v("#")]),t._v(" 工厂方法作用")]),t._v(" "),r("ol",[r("li",[t._v("工厂方法模式的用意是定义一个创建产品对象的工厂接口，"),r("font",{attrs:{color:"red"}},[t._v("将实际创建工作推迟到子类中")]),t._v("。")],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("顺应开闭原则：对扩展开放，对修改关闭")]),t._v("。")],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("允许系统在不修改具体工厂角色的情况下引进新的产品")]),t._v("，这一特点无疑使得工厂方法模式具有超过简单工厂模式的优越性。")],1)]),t._v(" "),r("br"),t._v(" "),r("h2",{attrs:{id:"工厂方法类图与角色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法类图与角色"}},[t._v("#")]),t._v(" 工厂方法类图与角色")]),t._v(" "),r("blockquote",[r("p",[t._v("工厂方法模式类图")])]),t._v(" "),r("p",[r("img",{attrs:{src:n(406),alt:"图1"}})]),t._v(" "),r("br"),t._v(" "),r("blockquote",[r("p",[t._v("工厂方法模式的系统涉及到以下角色：")])]),t._v(" "),r("ol",[r("li",[t._v("抽象工厂（ExportFactory）角色：担任这个角色的是工厂方法模式的核心，任何在模式中创建对象的工厂类必须实现这个接口。在实际的系统中，这个角色也常常使用抽象类实现。")]),t._v(" "),r("li",[t._v("具体工厂（ExportHtmlFactory、ExportPdfFactory）角色：担任这个角色的是实现了抽象工厂接口的具体JAVA类。具体工厂角色含有与业务密切相关的逻辑，并且受到使用者的调用以创建导出类（如：ExportStandardHtmlFile）。")]),t._v(" "),r("li",[t._v("抽象产品角色：工厂方法模式所创建的对象的超类，也就是所有导出类的共同父类或共同拥有的接口。在实际的系统中，这个角色也常常使用抽象类实现。")]),t._v(" "),r("li",[t._v("具体产品角色：这个角色实现了抽象导出（ExportFile）角色所声明的接口，工厂方法模式所创建的每一个对象都是某个具体导出角色的实例。")])]),t._v(" "),r("br"),t._v(" "),r("h2",{attrs:{id:"工厂方法实现方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法实现方式"}},[t._v("#")]),t._v(" 工厂方法实现方式")]),t._v(" "),r("blockquote",[r("p",[t._v("我们以导出文件为例子：")])]),t._v(" "),r("ol",[r("li",[t._v("导出html我们可以导出普通版的html也可以导出财务版的html。")]),t._v(" "),r("li",[t._v("导出pdf我们可以导出普通版的pdf也可以导出财务版的pdf。")])]),t._v(" "),r("ul",[r("li",[t._v("导出文件 "),r("font",{attrs:{color:"red"}},[t._v("抽象工厂")])],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("public interface ExportFactory\n{\n    public ExportFile factory(String type);\n}\n\n")])])]),r("ul",[r("li",[t._v("导出文件 "),r("font",{attrs:{color:"red"}},[t._v("抽象产品角色")])],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("public interface ExportFile\n{\n    public boolean export(String data);\n}\n\n")])])]),r("ul",[r("li",[t._v("导出文件 "),r("font",{attrs:{color:"red"}},[t._v("具体产品角色")])],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportFinancialHtmlFile implements ExportFile\n{\n    public boolean export(String data)\n    {\n        System.out.println("导出财务版HTML文件");\n        return false;\n    }\n}\n\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportFinancialPdfFile implements ExportFile\n{\n    public boolean export(String data)\n    {\n        System.out.println("导出财务版PDF文件");\n        return true;\n    }\n}\n\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportStandardHtmlFile implements ExportFile\n{\n    public boolean export(String data)\n    {\n        System.out.println("导出标准HTML文件");\n        return true;\n    }\n}\n\n\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportStandardPdfFile implements ExportFile\n{\n    public boolean export(String data)\n    {\n        System.out.println("导出标准PDF文件");\n        return true;\n    }\n}\n\n')])])]),r("ul",[r("li",[t._v("导出文件 "),r("font",{attrs:{color:"red"}},[t._v("具体工厂")])],1)]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportHtmlFactory implements ExportFactory\n{\n    public ExportFile factory(String type)\n    {\n        if ("standard".equals(type))\n        {\n            return new ExportStandardHtmlFile();\n        }\n        else if ("financial".equals(type))\n        {\n            return new ExportFinancialHtmlFile();\n        }\n        return null;\n    }\n}\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('public class ExportPdfFactory implements ExportFactory\n{\n    public ExportFile factory(String type)\n    {\n        if ("standard".equals(type))\n        {\n            return new ExportStandardPdfFile();\n        }\n        else if ("financial".equals(type))\n        {\n            return new ExportFinancialPdfFile();\n        }\n        return null;\n    }\n}\n')])])])])}),[],!1,null,null,null);a.default=e.exports}}]);